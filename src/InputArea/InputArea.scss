@import '../common.scss';
@import './InputAreaMixins.scss';
@import '../Typography/Typography.scss';

$input-area-padding-icon: 28px;
$exclamation-horizontal: 8px;
$exclamation-top: 4px;

.root {
    position: relative;
    display: flex;
    align-items: stretch;
    border: solid 1px;
    border-radius: 6px;
    padding: 2px;
    @include BoxSizing();
    @include FontRoman();
}

.inputArea {
    flex-grow: 1;
    flex-shrink: 1;
    min-width: 20px;
    min-height: 36px;
    padding: 0;
    margin: 0;
    border: 0;
    outline: 0;
    background: transparent;
    @extend .t2_1;
    @include Placeholder($paletteE6);
    @include Selection($paletteB4);
}

.hasError > .inputArea {
    padding-right: $input-area-padding-icon;
}

.resizable > textarea{
    resize: vertical;
}

.nonResizable > textarea{
    resize: none;
}

.exclamation {
    position: absolute;
    display: flex;
    align-items: center;
    flex-shrink: 0;
    flex-grow: 0;
    min-width: 0;
    user-select: none;
    margin: 0 6px;
    background-color: $paletteR1;
    width: 20px;
    height: 20px;
    border-radius: 50%;
    justify-content: center;
    &:last-child { margin: 0; }
    path { stroke: #fff; }

    top: $exclamation-top;
    right: $exclamation-horizontal;

    :global(.rtl) & {
        left: $exclamation-horizontal;
        right: initial;
    }
}


.theme {
    &-normal {
        @include ThemeDefault($color: $D10, $borderColor: $B30, $backgroundColor: $D80);
        @include ThemeHover($backgroundColor: $B50);
        @include ThemeFocus($borderColor: $B20, $boxShadow: inset 0px 0px 5px 0px fade($B10, 60%));
        @include ThemeError($borderColor: $paletteR1, $boxShadow: inset 0px 0px 5px 0px fade($R10, 60%));
    }
    &-paneltitle {
        @include ThemeDefault($color: white, $borderColor: #c1e4fe, $backgroundColor: rgba(22,45,61,0.6));
        @include ThemeHover($backgroundColor: rgba(22,45,61,0.4));
        @include ThemeFocus($borderColor: #4eb7f5, $boxShadow: inset 0 0 5px 0 rgba(56,153,236,0.6));
        @include ThemeError($borderColor: $paletteR1, $boxShadow: inset 0px 0px 5px 0px fade($R10, 60%));
    }
    &-material {
        border-radius: 0;
        .inputArea {
            @include FontLight();
        }
        @include ThemeDefault($color: $D10, $borderColor: transparent, $backgroundColor: $D80);
        @at-root {
            .bar {
                position: absolute;
                bottom: 0;
                left: -1px;
                right: -1px;
                height: 1px;
                background: $D60;
                &:before, &:after {
                    content: '';
                    height: 1px;
                    width: 0;
                    bottom: 0;
                    position: absolute;
                    background: $D50;
                    transition: 0.2s ease all;
                }
                &:before { left: 50%; }
                &:after { right: 50%; }
            }
            .hasFocus .bar:before,
            .hasFocus .bar:after {
                width:50%;
            }
        }
    }
}

// RTL layout based on global style set on document body or parent element.
:global(.rtl) {
    .inputArea {
        direction: rtl;
    }

    .hasError > .inputArea {
        padding-left: $input-area-padding-icon;
        padding-right: 0;
    }
}
